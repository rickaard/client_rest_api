{"version":3,"sources":["js/main.js"],"names":["outputEl","document","querySelector","submitBtn","formEl","editFormWrapper","editFormEl","editModalEl","addModalEl","addModalBtn","closeModalBtns","querySelectorAll","url","fetchContent","fetch","then","response","json","data","courses","map","item","index","concat","course_code","course_name","course_progress","course_syllabus","id","join","innerHTML","error","console","log","convertToJson","codeInput","nameInput","progressInput","syllabusInput","arguments","length","undefined","JSON","stringify","code","name","progress","syllabus","addCourse","event","preventDefault","jsonStr","value","method","headers","Content-Type","body","resp","reset","style","display","err","editModal","editCourse","header","deleteCourse","window","addEventListener","forEach","element","parentElement","onclick","target"],"mappings":"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","file":"../main.js","sourcesContent":["\"use strict\";\r\n\r\n// Declare element variables\r\nconst outputEl = document.querySelector('#fetch_output');\r\n\r\nconst submitBtn = document.querySelector('#submitBtn');\r\nconst formEl = document.querySelector('#add-course-form');\r\nconst editFormWrapper = document.querySelector('.edit-form');\r\nconst editFormEl = document.querySelector('#edit-course-form');\r\nconst editModalEl = document.querySelector('.edit-modal');\r\nconst addModalEl = document.querySelector('.add-modal');\r\nconst addModalBtn = document.querySelector('#add-modal-btn');\r\nconst closeModalBtns = document.querySelectorAll('.close');\r\n\r\n\r\n// API URL\r\nconst url = 'http://rickaard.se/webbutveckling/webbutveckling3/moment5/api/index.php/courses/';\r\n\r\n// Call fetch function when DOM is finnished loading the DOM tree \r\nwindow.addEventListener('DOMContentLoaded', fetchContent);\r\n// Event listeners\r\nformEl.addEventListener('submit', addCourse);\r\neditFormEl.addEventListener('submit', editCourse);\r\n\r\naddModalBtn.addEventListener('click', () => {\r\n    addModalEl.style.display = 'block';\r\n})\r\n\r\n// Modal close button\r\ncloseModalBtns.forEach(element => {\r\n    element.addEventListener('click', () => {\r\n        element.parentElement.parentElement.style.display = 'none';\r\n    })\r\n})\r\n\r\n// If press outside of the modal -> close it\r\nwindow.onclick = function(event) {\r\n    if (event.target == addModalEl || event.target == editModalEl) {\r\n        addModalEl.style.display = \"none\";\r\n        editModalEl.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n// Fetch content (the courses)\r\n// And display it in the table\r\nfunction fetchContent()  {\r\n    fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        let courses = data.map((item, index) => {\r\n            return `\r\n            <tr class=\"course_wrapper\">\r\n                <td class=\"course-code\">${item.course_code}</td>\r\n                <td class=\"course-name\">${item.course_name}</td>\r\n                <td class=\"course-progress\">${item.course_progress}</td>\r\n                <td class=\"course-syllabus\"><a target=\"_blank\" href=\"${item.course_syllabus}\">Webbl√§nk</a></td>\r\n                <td class=\"course-delete\"><button id=\"${item.id}\" class=\"btn btn-small btn-warning\" onClick=\"deleteCourse(${item.id})\"><i class=\"fas fa-trash-alt\"></i></button></td>\r\n                <td class=\"course-edit\"><button class=\"btn btn-small btn-sucess\" onClick=\"editModal('${item.course_code}', '${item.course_name}', '${item.course_progress}', '${item.course_syllabus}', ${item.id})\"><i class=\"fas fa-edit\"></i></button></td>\r\n            </tr>\r\n            `\r\n        }).join(\"\");\r\n        outputEl.innerHTML = courses;\r\n    })\r\n    .catch(error => console.log(error))\r\n}\r\n\r\n// Convert the argument to a JSON object\r\nfunction convertToJson(codeInput, nameInput, progressInput, syllabusInput, id = undefined) {\r\n    let course_code = codeInput;\r\n    let course_name = nameInput;\r\n    let course_progress = progressInput;\r\n    let course_syllabus = syllabusInput;\r\n\r\n    let jsonStr;\r\n\r\n    if (id == undefined) {\r\n        jsonStr = JSON.stringify({\r\n            'code': course_code,\r\n            'name': course_name,\r\n            'progress': course_progress,\r\n            'syllabus': course_syllabus,\r\n        });\r\n    } else {\r\n        jsonStr = JSON.stringify({\r\n            'code': course_code,\r\n            'name': course_name,\r\n            'progress': course_progress,\r\n            'syllabus': course_syllabus,\r\n            'id': id\r\n        });\r\n    }\r\n    return jsonStr;\r\n}\r\n\r\n\r\n// Post new course\r\nfunction addCourse (event) {\r\n    event.preventDefault();\r\n\r\n    let jsonStr = convertToJson(document.querySelector('#course_code').value, document.querySelector('#course_name').value, document.querySelector('#course_progress').value, document.querySelector('#course_syllabus').value)\r\n\r\n    fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: jsonStr\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        fetchContent(); // Fetching all the courses again when a new course is added\r\n        formEl.reset(); // Resets the input fields in the form\r\n        addModalEl.style.display = 'none'; // Hide the modal again\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// Open edit modal\r\nfunction editModal(code, name, progress, syllabus, id) {\r\n    // Fill the form with correct values\r\n    document.querySelector('#edit-course-form > div > #course_code').value = code;\r\n    document.querySelector('#edit-course-form > div > #course_name').value = name;\r\n    document.querySelector('#edit-course-form > div > #course_progress').value = progress;\r\n    document.querySelector('#edit-course-form > div > #course_syllabus').value = syllabus;\r\n    document.querySelector('#edit-course-form > div > #course_id').value = id;\r\n    editModalEl.style.display = 'block';\r\n}\r\n\r\n\r\n// Edit course\r\nfunction editCourse(event) {\r\n    event.preventDefault();\r\n    \r\n    let jsonStr = convertToJson(document.querySelector('#edit-course-form > div > #course_code').value, document.querySelector('#edit-course-form > div > #course_name').value, document.querySelector('#edit-course-form > div > #course_progress').value, document.querySelector('#edit-course-form > div > #course_syllabus').value, document.querySelector('#edit-course-form > div > #course_id').value);\r\n\r\n    fetch(url, {\r\n        method: 'PUT',\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: jsonStr\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        fetchContent(); // Fetch the content again to re-display the new updated data\r\n        editModalEl.style.display = 'none'; // Hide the edit modal\r\n    })\r\n}\r\n\r\n// Delete course\r\nfunction deleteCourse(id) {\r\n    fetch(url+id, {\r\n        method: 'DELETE'\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        fetchContent(); // Fetching all the courses again when a course is removed \r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// Event listener on every delete-button, call the deleteCourse function on click\r\ndocument.querySelectorAll('.course-delete > button').forEach(element => {\r\n    element.addEventListener('click', deleteCourse);\r\n    deleteCourse()\r\n});\r\n\r\n\r\n"]}